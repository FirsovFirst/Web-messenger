{"ast":null,"code":"var _jsxFileName = \"C:\\\\educ\\\\Projects\\\\online-chat\\\\src\\\\pages\\\\chat\\\\components\\\\messanger\\\\Messanger.jsx\",\n  _s = $RefreshSig$();\nimport EmojiPicker from \"emoji-picker-react\";\nimport { useEffect, useState } from \"react\";\nimport { useConnection } from '../../../../hook/useConnection';\nimport './messanger.css';\nimport { deleteChat, getMessages, sendMessage } from \"../../../../hoc/Requests\";\nimport { sendAllMessages } from '../../../../hoc/MessagesSender';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messanger = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [message, setMessage] = useState(false);\n  const [emojiOpen, setEmojiOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const {\n    connection,\n    currentChat,\n    currentBuddy\n  } = useConnection();\n  useEffect(() => {\n    if (currentChat) {\n      getMessages(currentChat).then(res => {\n        if (res.status === 200) {\n          setMessages(res.data);\n        }\n        console.log(res.status);\n      }).catch(err => console.log(err));\n    }\n  }, [currentChat, message]);\n  useEffect(() => {\n    if (connection !== null) {\n      connection.on('UpdateMessagesMessage', message => {\n        if (message === localStorage.getItem('username')) {\n          setMessage(prev => !prev);\n        }\n      });\n    }\n  }, [connection]);\n  const handleEmoji = e => {\n    setText(prev => prev + e.emoji);\n    setEmojiOpen(false);\n  };\n  const handleSend = () => {\n    if (text === '') return;\n    sendMessage(currentChat, text).then(() => {\n      sendAllMessages(connection, currentBuddy);\n      setText('');\n    }).catch(err => console.log(err));\n  };\n  const handleDelete = event => {\n    event.preventDefault();\n    deleteChat(currentChat).then(() => {\n      sendAllMessages(connection, currentBuddy);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messanger\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentBuddy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleDelete,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.senderName === localStorage.getItem('username') ? \"message own\" : \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Date.now()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, message.Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji\",\n        onClick: () => setEmojiOpen(prev => !prev),\n        children: [\"\\uD83D\\uDE03\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emojiPicker\",\n          children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            open: emojiOpen,\n            onEmojiClick: handleEmoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleSend,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Messanger, \"jEXwP9cKj7qbUX2ImNH/DojzGS8=\", false, function () {\n  return [useConnection];\n});\n_c = Messanger;\nexport { Messanger };\nvar _c;\n$RefreshReg$(_c, \"Messanger\");","map":{"version":3,"names":["EmojiPicker","useEffect","useState","useConnection","deleteChat","getMessages","sendMessage","sendAllMessages","jsxDEV","_jsxDEV","Messanger","_s","text","setText","message","setMessage","emojiOpen","setEmojiOpen","messages","setMessages","connection","currentChat","currentBuddy","then","res","status","data","console","log","catch","err","on","localStorage","getItem","prev","handleEmoji","e","emoji","handleSend","handleDelete","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","senderName","Date","now","Id","type","placeholder","value","onChange","target","open","onEmojiClick","_c","$RefreshReg$"],"sources":["C:/educ/Projects/online-chat/src/pages/chat/components/messanger/Messanger.jsx"],"sourcesContent":["import EmojiPicker from \"emoji-picker-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useConnection } from '../../../../hook/useConnection';\r\nimport './messanger.css';\r\nimport { deleteChat, getMessages, sendMessage } from \"../../../../hoc/Requests\";\r\nimport { sendAllMessages } from '../../../../hoc/MessagesSender';\r\n\r\nconst Messanger = () => {\r\n    const [text, setText] = useState('');\r\n    const [message, setMessage] = useState(false);\r\n    const [emojiOpen, setEmojiOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const { connection, currentChat, currentBuddy } = useConnection();\r\n\r\n    useEffect(() => {\r\n        if (currentChat) {\r\n            getMessages(currentChat).then(res => {\r\n                if (res.status === 200) {\r\n                    setMessages(res.data);\r\n                }\r\n                console.log(res.status);\r\n            }).catch(err => console.log(err));\r\n        }\r\n    }, [currentChat, message])\r\n\r\n    useEffect(() => {\r\n        if (connection !== null) {\r\n            connection.on('UpdateMessagesMessage', (message) => {\r\n                if (message === localStorage.getItem('username')) {\r\n                    setMessage(prev => !prev);\r\n                }\r\n            });\r\n        }\r\n    }, [connection])\r\n\r\n    const handleEmoji = (e) => {\r\n        setText((prev) => prev + e.emoji);\r\n        setEmojiOpen(false);\r\n    }\r\n\r\n    const handleSend = () => {\r\n        if (text === '') return;\r\n\r\n        sendMessage(currentChat, text).then(() => {\r\n            sendAllMessages(connection, currentBuddy);\r\n            setText('');\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    const handleDelete = (event) => {\r\n        event.preventDefault();\r\n        deleteChat(currentChat).then(() => {\r\n            sendAllMessages(connection, currentBuddy);\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className='messanger'>\r\n            <div className=\"top\">\r\n                <h2>{currentBuddy}</h2>\r\n                <button className=\"button\" onClick={handleDelete}>Удалить чат</button>\r\n            </div>\r\n\r\n            <div className=\"messages\">\r\n                {messages.map((message) => (\r\n                    <div className={message.senderName === localStorage.getItem('username') ? \"message own\" : \"message\"} key={message.Id}>\r\n                        <p>{message.text}</p>\r\n                        <span>{Date.now()}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"bottom\">\r\n                <input \r\n                    className='input'\r\n                    type=\"text\"\r\n                    placeholder=\"Введите сообщение\"\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                />\r\n                <div className='emoji' onClick={() => setEmojiOpen(prev => !prev)}>\r\n                    😃\r\n                    <div className=\"emojiPicker\">\r\n                        <EmojiPicker open={emojiOpen} onEmojiClick={handleEmoji}/>\r\n                    </div>\r\n                </div>\r\n                <button className='button' onClick={handleSend}>Отправить</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {Messanger}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}